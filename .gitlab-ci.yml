stages:
  - test-build
  - publish-artifacts
  - docker-package
  - deploy

test-build:
  only:
    refs:
      - master
  image: node:latest
  stage: test-build
  script:
    - npm install
    - npm run test:unit
    - npm run build
  artifacts:
    paths:
      - dist/
      - pact/pacts

publish-artifacts:
  only:
    refs:
      - master
  image: node:latest
  stage: publish-artifacts
  script:
    - npm install
    - npm run publish:pact

docker-package:
  only:
    refs:
      - master
  image: docker:latest
  stage: docker-package
  services:
    - name: docker:dind
  before_script:
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL
  after_script:
    - docker logout
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - docker build -t $DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USER/todofrontend:latest .
    - docker tag $DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USER/todofrontend:latest $DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USER/todofrontend:stable
    - docker push $DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USER/todofrontend:latest
    - docker push $DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USER/todofrontend:stable

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster do-lon1-k8s-1-18-3-do-0-lon1-1594509414702 --server="$K8S_URL"
    - kubectl config set clusters.do-lon1-k8s-1-18-3-do-0-lon1-1594509414702.certificate-authority-data "$K8S_CA_DATA"
    - kubectl config set-credentials $K8S_CLUSTER_USER --token="$K8S_TOKEN"
    - kubectl config set-context default --cluster=$K8S_CLUSTER_NAME --user=$K8S_CLUSTER_USER
    - kubectl config use-context default
    - kubectl config view
    - kubectl apply -f deployment.yml